// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma/client"
  // binaryTargets = ["linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(cuid())
  username String @unique // Use username for login
  email    String
  password String // Store hashed passwords only!
  @@map("admins")
}

model Attendee {
  id       String  @id @default(cuid())
  username String  @unique // Use username for login
  email    String
  password String // Store hashed passwords only!
  // Add any other attendee-specific fields here

  isFamily Boolean @default(false)
  balance  Int     @default(1000)
  subscriptionChargePayed Boolean @default(false)

  Orders Order[]

  @@map("attendees")
}

model Operator {
  id       String  @id @default(cuid())
  username String  @unique // Use username for login
  email    String
  password String // Store hashed passwords only!

  // Add any other operator-specific fields here
  @@map("operators")
}

model Event {
  id String @id @default(cuid())

  imgURL      String
  title       String
  description String

  startDate String
  endDate   String

  days Json
  // items are array of days
  // days are array of FoodItems
  // FoodItems are array of price like member price, guest price for single, guest price for family
  Order   Order[]

  @@map("events")
}

model Order {
  id String @id @default(cuid())

  Attendee   Attendee @relation(fields: [attendeeId], references: [id])
  attendeeId String

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
  
  memberItems Json
  // items are array of days
  // days are array of FoodItems
  // FoodItems are array of price and amount of items

  isGuestOrder Boolean @default(false)
  guestName String
  guestIsFamily Boolean @default(false)
  guestAdultCount Int
  guestChildCount Int
  guestItems Json
  
  createdAt DateTime @default(now())

  @@map("orders")
}
